walk_engine:
  debugging:
    enabled: false  # Determine whether or not to include NUclear trace logs during execution...

  servos:
    gain: # The gains to use for the servos during the walk
      left_arm:  15
      right_arm: 15
      left_leg:  30
      right_leg: 30
      head: 30
      p_gain: 25
      d_gain: 5
      i_gain: 1

    gains: # The gains to use for the servos during the walk
      -
        id: "HIP_YAW"
        p: 100
      -
        id: "HIP_ROLL"
        p: 100
      -
        id: "HIP_PITCH"
        p: 100
      -
        id: "KNEE"
        p: 1000
      -
        id: "ANKLE_PITCH"
        p: 100
      -
        id: "ANKLE_ROLL"
        p: 100 
  
  sensors:
    gyro:
      # Ratio to normalize gyro gains into units of degree/second
      gyroFactor: 0.18 * 0.273 * pi / 180 * 300 / 1024 # dps to rad/s conversion
    imu:  
      ankleImuParamX: [0.5, 0.3 * 0.00025126605,   1 * pi / 180, 25 * pi / 180]
      ankleImuParamY: [0.5, 1.2 * 0.00025126605,   1 * pi / 180, 25 * pi / 180]
      kneeImuParamX:  [0.5, 0.7 * 0.00025126605,   1 * pi / 180, 25 * pi / 180]
      hipImuParamY:   [0.5, 0.3 * 0.00025126605,   1 * pi / 180, 25 * pi / 180]
      armImuParamX:   [0.5, 10.0 * 0.00025126605, 20 * pi / 180, 45 * pi / 180]
      armImuParamY:   [0.5, 0.0 * 0.00025126605,  20 * pi / 180, 45 * pi / 180]   # supportTurn: 0.02        
  
  stance:
    body:
      height: 0.28 # Body height, in meters; changing this will alter how high the robot's natural stance is.
      tilt:  12 * pi / 180  # The angle of the torso when walking

    limit_margin_y: 0.015  # gToe/heel + length between legs overlap checking values

    foot_offset:
      - -0.010  # The distance the ankles are offset from the torso, in meters.
      -  -0.00500  # How far from the center of the foot the center of mass is placed during each step.

    STAND_SCRIPT_DURATION: 1 

  walk_cycle:
    step_time: 0.330 # Defines how long it will take for the robot to take its next step, in seconds.

    step:
      height: 0.0450 # The height to which the robot raises its foot at each step. Very sensitive in terms of balance.
      height_slow_fraction: 0.5 # height of foot as a fraction of height
      height_fast_fraction: 1.5 # height of foot as a fraction of height
      limits: # These limit the distance a footstep will take
        - [-0.100, 0.200]           # [min_x, max_x]
        - [ 0.010, 0.300]           # [min_y, max_y]
        - [ 0.000, 15 * pi / 180]   # [min_angle, max_angle]

    velocity:
      limits: # Velocity limits for the walk
        - [-0.027, 0.04]      # [min_x, max_x]
        - [-0.010, 0.01]      # [min_y, max_y]
        - [-0.800, 0.80]      # [min_angle, max_angle]
      high_speed: 0.06  # This defines a 'fast' speed in the forward direction
    
    acceleration:
      limits: [1.5, 0.045, 5]       # Acceleration limits
      limits_high: [0.08, 0.05, 5]  # When moving at 'fast' speed or faster, use these limits instead
      turning_factor: 0.6           # Factor to slow down walk when turning
    
    single_support_phase: # When to begin and end the single support phase. Range: [0,1]
      start:  0.1
      end:    0.9 

######################################################################################################################

balance_kinematic_response:
  debugging:
    enabled: false  # Determine whether or not to include NUclear trace logs during execution...
    emit_localisation: false # Emit fake localisation Self objects based on the walk engine's blind belief

  stance: 
    arms:
      left:
        start:
          -   90 * pi / 180 # Shoulder Pitch
          -   15 * pi / 180 # Shoulder Roll
          -  -30 * pi / 180 # Elbow
        end:
          -   80 * pi / 180 # Shoulder Pitch
          -   15 * pi / 180 # Shoulder Roll
          -  -90 * pi / 180 # Elbow
      right:
        start:
          -   90 * pi / 180 # Shoulder Pitch
          -  -15 * pi / 180 # Shoulder Roll
          -  -30 * pi / 180 # Elbow
        end:
          -   80 * pi / 180 # Shoulder Pitch
          -  -15 * pi / 180 # Shoulder Roll
          -  -90 * pi / 180 # Elbow
    moving_enabled: false

  balance: # TODO: balance params disabled until they are futher understood
    enabled: true
    optimiser_enabled:    false
    hip_compensation:     false
    toe_compensation:     false
    ankle_compensation:   false
    arm_compensation:     false
    support_compensation: false

    amplitude: 1.0
    weight: 0.7
    offset: 0 * pi / 180

    hip_compensation_scale:     1.0
    toe_compensation_scale:     1.0
    ankle_compensation_scale:   1.6
    arm_compensation_scale:     1.0
    support_compensation_scale: 1.0


    hip_compensation_max:     90 * pi / 180
    toe_compensation_max:     5 * pi / 180
    ankle_compensation_max:   10 * pi / 180
    arm_compensation_max:     30 * pi / 180
    support_compensation_max: 90 * pi / 180

    hip_rotation_scale: 2.0
    ankle_rotation_scale: 0.5

    angle_gain:
      p: 0.1
      i: 0.0
      d: 0.0
    translation_gain:
      X:
        p: 0.0
        d: -0.0
      Y:
        p: 0
        d: 0
      Z:
        p: 0.035
        d: 0

  push_recovery:
    enabled: false
    amplitude: 1.0
    weight: 0.7
    offset: 0 * pi / 180

    balance_time: 800

    hip_rotation_scale: 2.0
    ankle_rotation_scale: 0.5

    angle_gain:
      p: 0.5
      i: 0.0
      d: 0.0
    translation_gain:
      X:
        p: 0.0
        d: -0.0
      Y:
        p: 0
        d: 0
      Z:
        p: 0.035
        d: 0  

  support_bias: # Support bias parameters to reduce backlash-based instability
    velFastForward: 0.05
    velFastTurn: 0.15
    supportFront: 0.03
    supportFront2: 0.03
    supportBack: -0.02
    supportSideX: -0.01
    supportSideY: -0.005
    toe_tip_compensation:  0 * pi / 180  
    hip_roll_compensation: 4 * pi / 180
    arm_roll_compensation: 90 * pi / 180

######################################################################################################################

torso_motion_planner:
  debugging:
    enabled: false  # Determine whether or not to include NUclear trace logs during execution...
  
  walk_cycle:
    zmp_time:  0.310 #     

######################################################################################################################

foot_placement_planner:
  debugging:
    enabled: false  # Determine whether or not to include NUclear trace logs during execution...

######################################################################################################################

foot_motion_planner:
  debugging:
    enabled: false  # Determine whether or not to include NUclear trace logs during execution...
    emit_foot_position: true # Emit characteristic foot elevation for duration of phase...

  walk_cycle:
    lift_ankle_pitch: 0* 25 * (pi / 180.0) # Defines the maximum rotation of the ankle pitch at start of motion.
    fall_ankle_pitch: 0* 12 * (pi / 180.0) # Defines the maximum rotation of the ankle pitch at end of motion.
